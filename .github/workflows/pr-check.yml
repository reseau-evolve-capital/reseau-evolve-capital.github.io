name: Pull Request Validation

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events targeting the main and develop branches
  pull_request:
    branches: [ main, develop ]

# Add explicit permissions for the GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      # Install dependencies
      - name: Install dependencies
        run: npm ci
        
      # Run linting
      - name: Lint code
        run: npm run lint
        
      # Verify build works
      - name: Build project
        run: |
          # Remove any previous build artifacts
          rm -rf out
          # Build the site to verify there are no build errors
          npm run build
          
      # Add a comment to the PR with the result
      - name: Comment PR
        uses: actions/github-script@v6
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Determine status message based on job status
            const statusIcon = (process.env.JOB_STATUS === 'success') ? '✅ Passed' : '❌ Failed';
            
            const output = `## Build Validation Results
            
            | Check | Status |
            | ----- | ------ |
            | Build | ${statusIcon} |
            
            ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            }); 